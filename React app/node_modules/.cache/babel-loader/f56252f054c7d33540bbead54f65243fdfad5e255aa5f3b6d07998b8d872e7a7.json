{"ast":null,"code":"import React,{useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EditProfile=_ref=>{let{username,bio,switchEditProfile}=_ref;const[newusername,setNewUsername]=useState(username);const[newBio,setNewBio]=useState(bio);const updateUsername=async newusername=>{if(newusername===undefined||newusername.trim()===\"\"){console.warn(\"Username cannot be empty\");return;}try{const response=await fetch(`/api/editUsername/`,{method:\"PATCH\",headers:{\"Content-Type\":\"application/json\"},credentials:\"include\",body:JSON.stringify({newusername})});console.log(\"Username successfully updated\");if(!response.ok){const errorText=await response.text();throw new Error(`Failed to update username: ${errorText}`);}}catch(error){console.error(\"Error changing username\",error);}};const updateBio=async newBio=>{if(newBio===undefined||newBio.trim()===\"\"){console.warn(\"bio cannot be empty\");return;}try{const response=await fetch(`/api/editBio/`,{method:\"PATCH\",headers:{\"Content-Type\":\"application/json\"},credentials:\"include\",body:JSON.stringify({newBio})});console.log(\"Bio successfully updated\");if(!response.ok){const errorText=await response.text();throw new Error(`Failed to update Bio: ${errorText}`);}}catch(error){console.error(\"Error changing Bio\",error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"edit-profile-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"back-button\",onClick:switchEditProfile,children:\"Back\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Username\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"Username\",name:\"Username\",value:newusername,onChange:e=>setNewUsername(e.target.value),placeholder:username}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>updateUsername(newusername),children:\"Done\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Bio\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"Bio\",name:\"Bio\",value:newBio,onChange:e=>setNewBio(e.target.value),placeholder:bio}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>updateBio(newBio),children:\"Done\"})]})]});};export default EditProfile;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","EditProfile","_ref","username","bio","switchEditProfile","newusername","setNewUsername","newBio","setNewBio","updateUsername","undefined","trim","console","warn","response","fetch","method","headers","credentials","body","JSON","stringify","log","ok","errorText","text","Error","error","updateBio","className","children","onClick","type","id","name","value","onChange","e","target","placeholder"],"sources":["C:/Users/Aniket Sahu/Desktop/Projects/Messaging site/React app/src/components/editProfile.tsx"],"sourcesContent":["import React, { useState, useTransition } from \"react\";\r\n\r\ninterface editProfileProps {\r\n  username: string | undefined;\r\n  bio: string | undefined; \r\n  switchEditProfile: () => void;\r\n}\r\n\r\nconst EditProfile: React.FC<editProfileProps> = ({ username, bio, switchEditProfile }) => {\r\n  const [newusername, setNewUsername] = useState<string | undefined>(username);\r\n  const [newBio, setNewBio] = useState<string | undefined>(bio);\r\n\r\n  const updateUsername = async (newusername: string | undefined) => {\r\n    if (newusername === undefined || newusername.trim() === \"\") {\r\n      console.warn(\"Username cannot be empty\");\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(`/api/editUsername/`, {\r\n        method: \"PATCH\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify({\r\n          newusername,\r\n        }),\r\n      });\r\n      console.log(\"Username successfully updated\");\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`Failed to update username: ${errorText}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error changing username\", error);\r\n    }\r\n  };\r\n\r\n  const updateBio = async (newBio: string | undefined) => {\r\n    if (newBio === undefined || newBio.trim() === \"\") {\r\n      console.warn(\"bio cannot be empty\");\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(`/api/editBio/`, {\r\n        method: \"PATCH\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify({\r\n          newBio,\r\n        }),\r\n      });\r\n      console.log(\"Bio successfully updated\");\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`Failed to update Bio: ${errorText}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error changing Bio\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"edit-profile-container\">\r\n      <button className=\"back-button\" onClick={switchEditProfile}>\r\n        Back\r\n      </button>\r\n      <div>\r\n        <h2>Username</h2>\r\n        <input\r\n          type=\"text\"\r\n          id=\"Username\"\r\n          name=\"Username\"\r\n          value={newusername}\r\n          onChange={(e) => setNewUsername(e.target.value)}\r\n          placeholder={username}\r\n        />\r\n        <button onClick={() => updateUsername(newusername)}>Done</button>\r\n      </div>\r\n      <div>\r\n        <h2>Bio</h2>\r\n        <input\r\n          type=\"text\"\r\n          id=\"Bio\"\r\n          name=\"Bio\"\r\n          value={newBio}\r\n          onChange={(e) => setNewBio(e.target.value)}\r\n          placeholder={bio}\r\n        />\r\n        <button onClick={() => updateBio(newBio)}>Done</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}