{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Main=_ref=>{let{user,selectedFriend,setAuthenticated}=_ref;const navigate=useNavigate();const[messages,setMessages]=useState([]);const[newMessage,setNewMessage]=useState(\"\");useEffect(()=>{fetchMessages();},[selectedFriend]);const fetchMessages=async()=>{if(!selectedFriend)return;try{const response=await fetch(`/api/messages?friend_id=${selectedFriend.user_id}`,{method:'GET',credentials:'include'});const data=await response.json();const sortedMessages=data.messages.sort((a,b)=>new Date(a.time).getTime()-new Date(b.time).getTime());setMessages(sortedMessages);}catch(error){console.error('Error fetching messages:',error);}};const messageSent=async message=>{if(!selectedFriend){alert(\"Please select a friend to send a message.\");return;}try{const response=await fetch('/api/sendMessage',{method:'POST',headers:{'Content-Type':'application/json'},credentials:'include',body:JSON.stringify({message,friend_id:selectedFriend.user_id})});const data=await response.json();if(response.ok){setMessages(prevMessages=>[...prevMessages,data]);setNewMessage(\"\");}}catch(error){console.error('Error sending message',error);}};const handleSendMessage=e=>{e.preventDefault();if(newMessage.trim()){messageSent(newMessage);}};const handleLogout=async()=>{try{const response=await fetch('/logout',{method:'GET',credentials:'include'});if(response.ok){const data=await response.json();console.log(data.message);setAuthenticated(false);setTimeout(()=>{navigate('/');},100);}else{console.error(\"Logout failed\");}}catch(error){console.error('Error during logout:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"main-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"main-header\",children:[selectedFriend?selectedFriend.username:\"Select a friend\",/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,children:\"Logout\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"main-messages\",children:messages.length>0?messages.map((msg,index)=>/*#__PURE__*/_jsx(\"div\",{className:msg.user_id===user.user_id?\"user-message\":\"friend-message\",children:/*#__PURE__*/_jsx(\"span\",{children:msg.message})},index)):/*#__PURE__*/_jsx(\"div\",{children:\"You are so lonely\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"main-input\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSendMessage,children:[/*#__PURE__*/_jsx(\"input\",{id:\"message-input\",name:\"message\",type:\"text\",placeholder:\"Type your message...\",value:newMessage,onChange:e=>setNewMessage(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Send\"})]})})]});};export default Main;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","Main","_ref","user","selectedFriend","setAuthenticated","navigate","messages","setMessages","newMessage","setNewMessage","fetchMessages","response","fetch","user_id","method","credentials","data","json","sortedMessages","sort","a","b","Date","time","getTime","error","console","messageSent","message","alert","headers","body","JSON","stringify","friend_id","ok","prevMessages","handleSendMessage","e","preventDefault","trim","handleLogout","log","setTimeout","className","children","username","onClick","length","map","msg","index","onSubmit","id","name","type","placeholder","value","onChange","target"],"sources":["C:/Users/Aniket Sahu/Desktop/Projects/Messaging site/React app/src/components/main.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\ninterface User {\r\n    user_id: number;\r\n    username: string;\r\n} \r\n\r\ninterface mainProps{\r\n    user: User;\r\n    selectedFriend: User | null;\r\n    setAuthenticated: (value: boolean) => void;\r\n}\r\n\r\ninterface Message {\r\n    message_id?: number;\r\n    user_id: number;\r\n    friend_id: number;\r\n    time: Date;\r\n    message: string;\r\n}\r\n\r\nconst Main: React.FC<mainProps> = ({ user, selectedFriend, setAuthenticated }) => {\r\n    const navigate = useNavigate();\r\n    const [messages, setMessages] = useState<Message[]>([]);\r\n    const [newMessage, setNewMessage] = useState<string>(\"\");\r\n\r\n    useEffect(() => {\r\n        fetchMessages();\r\n    }, [selectedFriend]);\r\n\r\n    const fetchMessages = async () => {\r\n        if (!selectedFriend) return;\r\n\r\n        try {\r\n            const response = await fetch(`/api/messages?friend_id=${selectedFriend.user_id}`, {\r\n                method: 'GET',\r\n                credentials: 'include',\r\n            });\r\n            const data = await response.json();\r\n            const sortedMessages = data.messages.sort((a: Message, b:Message) => new Date(a.time).getTime() - new Date(b.time).getTime());\r\n            setMessages(sortedMessages);\r\n        } catch (error) {\r\n            console.error('Error fetching messages:', error);\r\n        }\r\n    };\r\n\r\n    const messageSent = async (message: string) => {\r\n        if (!selectedFriend) {\r\n            alert(\"Please select a friend to send a message.\"); \r\n            return;\r\n        }\r\n        try {\r\n            const response = await fetch('/api/sendMessage', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                credentials: 'include',\r\n                body: JSON.stringify({\r\n                    message,\r\n                    friend_id: selectedFriend.user_id,\r\n                }),\r\n            });\r\n            const data = await response.json();\r\n\r\n            if (response.ok) {\r\n                setMessages((prevMessages) => [...prevMessages, data]);\r\n                setNewMessage(\"\");\r\n            }\r\n        } catch (error) {\r\n            console.error('Error sending message', error);\r\n        }\r\n    };\r\n\r\n    const handleSendMessage = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        if (newMessage.trim()) {\r\n            messageSent(newMessage);\r\n        }\r\n    };\r\n\r\n    const handleLogout = async () => {\r\n        try {\r\n            const response = await fetch('/logout', {\r\n                method: 'GET',\r\n                credentials: 'include',\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log(data.message); \r\n                setAuthenticated(false); \r\n                setTimeout(() => {\r\n                    navigate('/'); \r\n                }, 100);\r\n            } else {\r\n                console.error(\"Logout failed\");\r\n            }\r\n        } catch (error) {\r\n            console.error('Error during logout:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"main-container\">\r\n            <div className=\"main-header\">\r\n                {selectedFriend ? selectedFriend.username : \"Select a friend\"}\r\n                <button onClick={handleLogout}>Logout</button>\r\n            </div>\r\n            <div className=\"main-messages\">\r\n                {messages.length > 0 ? messages.map((msg, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className={msg.user_id === user.user_id ? \"user-message\" : \"friend-message\" }>\r\n                        <span>{msg.message}</span>\r\n                    </div>\r\n                )): <div>You are so lonely</div>}\r\n            </div>\r\n            <div className=\"main-input\">\r\n                <form onSubmit={handleSendMessage}>\r\n                    <input\r\n                        id=\"message-input\"  \r\n                        name=\"message\"   \r\n                        type=\"text\"\r\n                        placeholder=\"Type your message...\"\r\n                        value={newMessage}\r\n                        onChange={(e) => setNewMessage(e.target.value)}\r\n                    />\r\n                    <button type=\"submit\">Send</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}