{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import EditProfile from\"./editProfile\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Sidebar=_ref=>{let{user,setSelectedFriend,setShowmain,showMain}=_ref;const[searchTerm,setSearchTerm]=useState(\"\");const[friends,setFriends]=useState([]);const[showEdit,setShowEdit]=useState(false);const filteredFriends=searchTerm?friends.filter(friend=>friend.username.toLowerCase().startsWith(searchTerm.toLowerCase())):friends;const switchEditProfile=async()=>{setShowEdit(!showEdit);};const fetchFriends=async()=>{try{const response=await fetch(\"/api/friends\",{method:\"GET\",credentials:\"include\"});const data=await response.json();setFriends(data);}catch(error){console.error(\"Error fetching friends:\",error);}};const handleShowAddFriend=()=>{setShowmain(!showMain);};useEffect(()=>{fetchFriends();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"sidebar-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sidebar-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Friends List\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleShowAddFriend,children:\"Add Friend\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"sidebar-search\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search friends...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value)})}),/*#__PURE__*/_jsx(\"div\",{className:\"sidebar-friends-list\",children:/*#__PURE__*/_jsx(\"ul\",{className:\"friend-item\",children:filteredFriends.length>0?filteredFriends.map(friend=>/*#__PURE__*/_jsx(\"li\",{onClick:()=>setSelectedFriend(friend),children:friend.username},friend.user_id)):/*#__PURE__*/_jsx(\"li\",{children:\"No friends found\"})})}),/*#__PURE__*/_jsx(\"button\",{className:\"edit-profile-button\",onClick:switchEditProfile,children:\"Edit Profile\"}),showEdit===true?/*#__PURE__*/_jsx(EditProfile,{username:user===null||user===void 0?void 0:user.username,bio:user===null||user===void 0?void 0:user.bio,UID:user===null||user===void 0?void 0:user.UID,switchEditProfile:switchEditProfile}):null]});};export default Sidebar;","map":{"version":3,"names":["React","useState","useEffect","EditProfile","jsx","_jsx","jsxs","_jsxs","Sidebar","_ref","user","setSelectedFriend","setShowmain","showMain","searchTerm","setSearchTerm","friends","setFriends","showEdit","setShowEdit","filteredFriends","filter","friend","username","toLowerCase","startsWith","switchEditProfile","fetchFriends","response","fetch","method","credentials","data","json","error","console","handleShowAddFriend","className","children","onClick","type","placeholder","value","onChange","e","target","length","map","user_id","bio","UID"],"sources":["C:/Users/Aniket Sahu/Desktop/Projects/Messaging site/React app/src/components/sidebar.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport EditProfile from \"./editProfile\";\r\n\r\ninterface User {\r\n  user_id: number;\r\n  username: string;\r\n  bio?: string;\r\n  UID: number;\r\n}\r\n\r\ninterface sideBarProps {\r\n  user: User | null;\r\n  setSelectedFriend: (selectedFriend: User) => void;\r\n  showMain: boolean;\r\n  setShowmain: (showMain: boolean) => void;\r\n}\r\n\r\nconst Sidebar: React.FC<sideBarProps> = ({\r\n  user,\r\n  setSelectedFriend,\r\n  setShowmain,\r\n  showMain\r\n}) => {\r\n  const [searchTerm, setSearchTerm] = useState<string>(\"\");\r\n  const [friends, setFriends] = useState<User[]>([]);\r\n  const [showEdit, setShowEdit] = useState<boolean>(false);\r\n\r\n  const filteredFriends = searchTerm\r\n    ? friends.filter((friend) =>\r\n        friend.username.toLowerCase().startsWith(searchTerm.toLowerCase())\r\n      )\r\n    : friends;\r\n\r\n  const switchEditProfile = async () => {\r\n    setShowEdit(!showEdit);\r\n  }\r\n\r\n  const fetchFriends = async () => {\r\n    try {\r\n      const response = await fetch(\"/api/friends\", {\r\n        method: \"GET\",\r\n        credentials: \"include\",\r\n      });\r\n      const data: User[] = await response.json();\r\n      setFriends(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching friends:\", error);\r\n    }\r\n  };\r\n\r\n  const handleShowAddFriend = () => {\r\n    setShowmain(!showMain);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFriends();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"sidebar-container\">\r\n      <div className=\"sidebar-header\">\r\n        <h1>Friends List</h1>\r\n        <button onClick={handleShowAddFriend}>Add Friend</button>\r\n      </div>\r\n      <div className=\"sidebar-search\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search friends...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"sidebar-friends-list\">\r\n        <ul className=\"friend-item\">\r\n          {filteredFriends.length > 0 ? (\r\n            filteredFriends.map((friend) => (\r\n              <li\r\n                key={friend.user_id}\r\n                onClick={() => setSelectedFriend(friend)}\r\n              >\r\n                {friend.username}\r\n              </li>\r\n            ))\r\n          ) : (\r\n            <li>No friends found</li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n      <button className=\"edit-profile-button\" onClick={switchEditProfile}>Edit Profile</button>\r\n      {showEdit === true ? <EditProfile username={user?.username} bio={user?.bio} UID={user?.UID} switchEditProfile={switchEditProfile}/> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}